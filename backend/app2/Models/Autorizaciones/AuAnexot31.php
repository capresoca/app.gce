<?php

namespace App\Models\Autorizaciones;

use App\Models\RedServicios\RsEntidade;
use App\Models\RedServicios\RsPlanescobertura;
use App\User;
use Carbon\Carbon;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Auth;
use Jedrzej\Pimpable\PimpableTrait;
use OwenIt\Auditing\Contracts\Auditable;

class AuAnexot31 extends Model implements Auditable
{
    use \OwenIt\Auditing\Auditable;
    use PimpableTrait;
    protected $fillable = [
        'au_anexot3s_id',
        'codigo',
        'descrip',
        'cant',
        'cAut',
        'fS',
        'pAut',
        'nivel',
        'modSer',
        'tipModSer',
        'cober',
        'obs',
        'espec',
        'fCad',
        'valor',
        'copago',
        'cont',
        'aCond',
        'reco',
        'ind',
        'nFac',
        'imp',
        'gs_usuario_id',
        'gs_usuariovalida_id',
        'si_copago',
        'contratado'
    ];

    protected $appends = ['cobertura','quirurgico','modalidad','nivel_atencion','servicio'];

    public function contrato () {
        return $this->belongsTo(RsPlanescobertura::class,'cont');
    }

    public function especialidad ()
    {
        return $this->belongsTo(AuEspecialidad::class,'espec');
    }

    public function usuario () {
        return $this->belongsTo(User::class,'gs_usuario_id');
    }

    public function usuarioValida () {
        return $this->belongsTo(User::class,'gs_usuariovalida_id');
    }

    public function entidad ()
    {
        return $this->belongsTo(RsEntidade::class,'pAut');
    }

    public function negacion () {
        return $this->hasOne(AuAnexot3neg::class,'au_anexot31_id');
    }

    public function getCoberturaAttribute($key)
    {
        return $this->attributes['cober'] !== ''
            ? Refcobertura::whereCodigo($this->attributes['cober'])->first() : null;
    }

    public function getQuirurgicoAttribute($key)
    {
        return $this->attributes['tipModSer'] !== ''
            ? Refqx::whereCodigo($this->attributes['tipModSer'])->first() : null;
    }

    public function getModalidadAttribute($key)
    {
        return  $this->attributes['modSer'] !== ''
            ? Refmodalidadservicio::whereCodigo($this->attributes['modSer'])->first() : null;
    }

    public function getNivelAtencionAttribute($key)
    {
        return $this->attributes['nivel'] !== ''
            ? Refnivelatencion::whereCodigo($this->attributes['nivel'])->first() : null;
    }

    public function getServicioAttribute($key)
    {
        return $this->attributes['codigo'] !== ''
            ? Refcup::whereCodigo($this->attributes['codigo'])->first() : null;
    }

    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        self::creating(function ($table){
            $table->gs_usuario_id = Auth::user()->id;
            if (($table->ind === 1 && $table->cAut === 0)
                || ($table->ind === 2 && $table->cAut === null)
                || ($table->ind === 1 && ($table->cAut !== null || $table->cAut !== 0))) {
                $table->gs_usuariovalida_id = Auth::user()->id;
            }
        });

    }
}