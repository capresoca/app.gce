<?php

namespace App\Models\Presupuesto;

use App\Models\AtencionUsuario\AuIncapacidade;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Auth;
use Jedrzej\Pimpable\PimpableTrait;
use OwenIt\Auditing\Contracts\Auditable;

class PrSolicitudCp extends Model implements Auditable
{
    protected $table = 'pr_solicitud_cps';
    use \OwenIt\Auditing\Auditable;
    use PimpableTrait;

    protected $fillable = [
        'fecha',
        'pr_detstrgasto_id',
        'consecutivo',
        'objeto_acontratar',
        'valor',
        'tipo',
        'desc_necesidad',
        'ce_proconestudioprevio_id',
        'incapacidad_id'
    ];

    protected $appends = ['valor_total', 'clas_funcionamiento', 'clas_gastos'];

    public function detstrgasto ()
    {
        return $this->belongsTo(PrDetstrgasto::class, 'pr_detstrgasto_id');
    }

    public function rubros()
    {
        return $this->hasMany(PrDetsolicitudcdp::class,'pr_solicitudcdp_id');
    }

    public function getClasFuncionamientoAttribute () {
        return $this->rubrosCategoria('Funcionamiento');
    }

    public function getClasGastosAttribute () {
        return $this->rubrosCategoria('Gastos de operacion comercial y de');
    }

    public function getValorTotalAttribute ()
    {
        return $this->rubrosCategoria('valor');
    }

    private function rubrosCategoria ($val) {
//        if (!$rubros->count()) return 0;
        $suma = 0;
        foreach ($this['rubros'] as $key => $rubro) {
            if ($rubro->detstrgasto->tipoGasto->clasificacion === $val) {
                return true;
            } else {
                if ($val !== 'valor') return false;
            }
            $suma+=$rubro->valor;
        }
        if ($val === 'valor') return $suma;
    }

    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        PrSolicitudCp::creating(function ($table){
            if(Auth::user()){
                $table->consecutivo  = PrSolicitudCp::max('consecutivo') + 1;
            }
        });

    }

}
