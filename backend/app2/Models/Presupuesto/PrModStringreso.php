<?php

namespace App\Models\Presupuesto;

use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Auth;
use Jedrzej\Pimpable\PimpableTrait;
use Jedrzej\Searchable\Constraint;
use OwenIt\Auditing\Contracts\Auditable;

class PrModStringreso extends Model implements Auditable
{
    use \OwenIt\Auditing\Auditable;
    use PimpableTrait;

    protected $fillable = [
        'consecutivo',
        'documento',
        'detalle_modificacion',
        'concepto_anulacion',
        'fecha_anulacion',
        'estado',
        'gs_usuario_id'
    ];

    public function detalles ()
    {
        return $this->hasMany(PrDetstringreso::class, 'pr_mod_stringeso_id');
    }

    protected function processSearchFilter(Builder $builder, Constraint $constraint)
    {
        // this logic should happen for LIKE/EQUAL operators only

        if ($constraint->getOperator() === Constraint::OPERATOR_LIKE || $constraint->getOperator() === Constraint::OPERATOR_EQUAL) {
            $builder->where('documento', $constraint->getOperator(), $constraint->getValue())
            ->orWhere('fecha_anulacion', $constraint->getOperator(), $constraint->getValue());
            return true;
        }
        // default logic should be executed otherwise
        return false;
    }

    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        PrModStringreso::creating(function ($table){
            if(Auth::user()){
                $table->gs_usuario_id = Auth::user()->id;
                $table->consecutivo  = PrModStringreso::max('consecutivo') + 1;
            }
        });

    }
}
